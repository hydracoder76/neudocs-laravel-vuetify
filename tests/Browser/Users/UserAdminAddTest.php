<?php

namespace Tests\Browser\Users;

use Tests\DuskTestCase;
use Laravel\Dusk\Browser;
use NeubusSrm\Models\Org\Project;
use NeubusSrm\Models\Auth\User;
use Illuminate\Foundation\Testing\DatabaseMigrations;

/**
 * Class UserAdminAddTest
 * @package Tests\Browser
 */
class UserAdminAddTest extends DuskTestCase
{
    use DatabaseMigrations;
    protected $user,$userLogin;

    public function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub
        $project = factory(Project::class)->create();
        $this->userLogin = factory(User::class)->create([
            'role' => User::ROLE_ADMIN,
            'company_id' => $project->company_id
        ]);
        $this->user = factory(User::class)->create();
    }

    public function tearDown() {
        unset($this->user);
        parent::tearDown(); // TODO: Change the autogenerated stub
    }


	/**
	 * @throws \Throwable
	 */
    public function testCanSeeAddModal()
    {
        $this->markTestIncomplete('Needs further refactoring before viable');
        $user = $this->userLogin;
        $this->browse(function (Browser $browser) use ($user) {
            $browser->loginAs($user)
                ->visit('/client/users')
                ->click('@neu-add-btn')
                ->assertVisible('@modalAdd');

        });
    }

    public function testCanAddUser()
    {
        $this->markTestIncomplete('Needs further refactoring before viable');
        $project = factory(Project::class)->create();
        $user = $this->userLogin;


        $this->browse(function (Browser $browser) use ($user, $project) {
            $browser->loginAs($user)
                ->visit('/client/users')
                ->click('@neu-add-btn')
	            ->waitFor('@name')
                ->type('@name', $this->user->name)
                ->type('@email', $this->user->email)
                ->type('@password', $this->user->password)
                ->waitFor('@company_id')
                ->select('@company_id',$project->name)
                ->waitFor('@role')
                ->select('@role','admin')
                ->press('OK')
                ->waitFor('@statusCRUD')
                ->assertSeeIn('@statusCRUD', "This alert will dismiss")
                ->with('@neu-table', function ($table) {
                    $table->assertSee($this->user->email);

                });
        });
    }

	/**
	 * Test for NSN-198
	 * @throws \Throwable
	 */
    public function testAboutModalDoesNotAppear() {
        $this->markTestIncomplete('Needs further refactoring before viable');
    	$this->browse(function(Browser $browser) {
    		$browser->loginAs($this->user)
			    ->visitRoute('admin.users')
			    ->click('@neu-add-btn')
			    ->assertDontSeeIn('@modalAdd', 'Service Request Management');
	    });
    }

}
